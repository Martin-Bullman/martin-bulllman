# GitHub action to deploy MartinBullmanApp backend.
name: deploy-backend

on:
  # trigger workflow on pushes to the main branch or pull requests targeting the main branch.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # set environment variables for node.js version and github context values.
  PYTHON_VERSION: 3.11.10
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # step 1: checkout the code from the repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # step2: setup python.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # step 3: install project dependencies.
      - name: Install Dependencies
        working-directory: ./backend/martinbullman
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt  

      # step 4: run the pylint.
      - name: Run Pylint
        working-directory: ./backend
        run: |
          pylint $(git ls-files '*.py')     

  test:
    # test job depends on the lint job.
    needs: lint
    runs-on: ubuntu-latest

    steps:
      # step 1: checkout the code from the repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # step 2: setup python.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # step 3: install project dependencies.
      - name: Install Dependencies
        working-directory: ./backend/martinbullman
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt    

      # step 4: run tests.
      - name: Run Tests
        working-directory: ./backend/martinbullman
        env:
          API_URL: ${{secrets.API_URL}}

          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_FROM_ADDRESS: ${{ secrets.EMAIL_FROM_ADDRESS }}
          EMAIL_FROM_NAME: ${{secrets.EMAIL_FROM_NAME}}

          MAILJET_API_KEY: ${{secrets.MAILJET_API_KEY}}
          MAILJET_API_SECRET: ${{secrets.MAILJET_API_SECRET}}

          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REFRESH_TOKEN: ${{ secrets.SPOTIFY_REFRESH_TOKEN }}

          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          python manage.py test    

  deploy:
    # Deployment depends on the test job.
    needs: test
    runs-on: ubuntu-latest

    steps:
      # Step 1: Download the build artifacts (optional, if you bundle or package backend code).
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-artifacts
          path: ./downloaded-artifacts

      # Step 2: Copy the backend artifacts to the remote server.
      - name: Deploy Artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.lightsail_host }}
          username: ubuntu
          key: ${{ secrets.lightsail_ssh_key }}
          target: /home/ubuntu/MartinBullmanApp/backend
          source: ./downloaded-artifacts/${{ env.github_sha }}.tar.gz

      # Step 3: Extract the artifacts, run migrations, and restart the service.
      - name: Extract and Restart Backend
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.lightsail_host }}
          username: ubuntu
          key: ${{ secrets.lightsail_ssh_key }}
          script: |
            # Navigate to backend directory
            mkdir -p "/home/ubuntu/releases/${{ env.github_sha }}"
            tar xzf "/home/ubuntu/MartinBullmanApp/backend/${{ env.github_sha }}.tar.gz" -C "/home/ubuntu/backend/releases/${{ env.github_sha }}"

            # Activate Python virtual environment
          
            source /home/ubuntu/MartinBullmanApp/venv/bin/activate

            # Install dependencies and run migrations
            pip install -r "/home/ubuntu/MartinBullmanApp/backend/releases/${{ env.github_sha }}/requirements.txt"
            python "/home/ubuntu/backend/releases/${{ env.github_sha }}/manage.py" migrate

            # Collect static files
            python "/home/ubuntu/backend/releases/${{ env.github_sha }}/manage.py" collectstatic --noinput

            # Restart backend application (systemd example)
            sudo systemctl restart martinbullman-backend.service
